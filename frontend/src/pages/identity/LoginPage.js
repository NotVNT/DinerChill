import React, { useState } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { useApp } from '../../context/AppContext';
import '../../styles/identity/AuthPages.css';

function LoginPage() {
  const { login } = useApp();
  const navigate = useNavigate();
  const location = useLocation();
  
  // Ki·ªÉm tra n·∫øu c√≥ redirect path
  const from = location.state?.from?.pathname || '/';
  
  const [formData, setFormData] = useState({
    emailOrPhone: '',
    password: ''
  });
  
  const [error, setError] = useState(null);
  const [loading, setLoading] = useState(false);
  const [loginAttempts, setLoginAttempts] = useState(0);
  
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };
  
  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError(null);
    
    try {
      await login(formData);
      // Chuy·ªÉn h∆∞·ªõng ng∆∞·ªùi d√πng sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng
      navigate(from, { replace: true });
    } catch (err) {
      // TƒÉng s·ªë l·∫ßn th·ª≠ ƒëƒÉng nh·∫≠p
      setLoginAttempts(prevAttempts => prevAttempts + 1);
      
      // X·ª≠ l√Ω l·ªói t√πy thu·ªôc v√†o s·ªë l·∫ßn th·ª≠ ƒëƒÉng nh·∫≠p
      if (err.message && err.message.includes('ƒëƒÉng nh·∫≠p b·∫±ng Google')) {
        setError('T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p kh√¥ng ch√≠nh x√°c');
      } else if (loginAttempts >= 1) { // ƒê√£ th·ª≠ 1 l·∫ßn tr∆∞·ªõc ƒë√≥, ƒë√¢y l√† l·∫ßn th·ª© 2+
        setError('T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p kh√¥ng ch√≠nh x√°c. Vui l√≤ng nh·∫•n "Qu√™n m·∫≠t kh·∫©u?" ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u m·ªõi.');
      } else {
        setError('T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p kh√¥ng ch√≠nh x√°c');
      }
    } finally {
      setLoading(false);
    }
  };
  
  // H√†m x·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫•n ƒëƒÉng nh·∫≠p v·ªõi Google
  const handleGoogleLogin = () => {
    window.location.href = `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/auth/google`;
  };
  
  return (
    <div className="auth-page">
      <div className="auth-container">
        <div className="auth-card">
          <div className="auth-header">
            <h1>ƒêƒÉng nh·∫≠p</h1>
            <p>Ch√†o m·ª´ng tr·ªü l·∫°i! ƒêƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c</p>

          </div>
          
          {error && (
            <div className="auth-error">
              <i className="error-icon">‚ö†Ô∏è</i>
              <span>{error}</span>
            </div>
          )}
          
          <form onSubmit={handleSubmit} className="auth-form">
            <div className="form-group">
              <label htmlFor="emailOrPhone">T√†i kho·∫£n</label>
              <div className="input-with-icon">
                <span className="input-icon">‚úâÔ∏è</span>
                <input
                  type="text"
                  id="emailOrPhone"
                  name="emailOrPhone"
                  value={formData.emailOrPhone}
                  onChange={handleChange}
                  placeholder="Nh·∫≠p email ho·∫∑c s·ªë ƒëi·ªán tho·∫°i"
                  required
                  autoComplete="username"
                />
              </div>
            </div>
            
            <div className="form-group">
              <label htmlFor="password">M·∫≠t kh·∫©u</label>
              <div className="input-with-icon">
                <span className="input-icon">üîí</span>
                <input
                  type="password"
                  id="password"
                  name="password"
                  value={formData.password}
                  onChange={handleChange}
                  placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
                  required
                  autoComplete="current-password"
                />
              </div>
            </div>
            
            <div className="forgot-password">
              <Link to="/forgot-password">Qu√™n m·∫≠t kh·∫©u?</Link>
            </div>
            
            <button 
              type="submit" 
              className="auth-button"
              disabled={loading}
            >
              {loading ? 
                <><i className="loading-icon">‚è≥</i> ƒêang x·ª≠ l√Ω...</> : 
                <><i className="button-icon">üîë</i> ƒêƒÉng nh·∫≠p</>
              }
            </button>
          </form>
          
          <div className="auth-divider">
            <span>HO·∫∂C</span>
          </div>
          
          <div className="social-login">
            <button 
              type="button"
              className="google-login-button"
              onClick={handleGoogleLogin}
            >
              <img 
                src="https://www.gstatic.com/firebasejs/ui/2.0.0/images/auth/google.svg" 
                alt="Google logo" 
                className="google-logo"
              />
              <span>ƒêƒÉng nh·∫≠p v·ªõi Google</span>
            </button>
          </div>
          

          <div className="auth-footer">
            <p>
              Ch∆∞a c√≥ t√†i kho·∫£n? <Link to="/register" className="register-link">ƒêƒÉng k√Ω ngay</Link>
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default LoginPage; 